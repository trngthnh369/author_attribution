import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', 'src')))

import streamlit as st

from author_profiling.preprocess import stem_lema
from author_profiling.count_word import count_word
from author_profiling.similarity_utils import cosine_similarity_sklearn

THRESHOLD = 0.8  # Ng∆∞·ª°ng ph√¢n bi·ªát c√πng t√°c gi·∫£

import nltk
nltk.download('punkt_tab', quiet=True)
nltk.download('punkt', quiet=True)
nltk.download('wordnet', quiet=True)

def compare_authors(test_text):
    """
    H√†m ch√≠nh ƒë·ªÉ so s√°nh t√°c gi·∫£ c·ªßa hai vƒÉn b·∫£n.
    - ƒê·ªçc file alice.txt
    - Nh·∫≠n vƒÉn b·∫£n c·∫ßn ki·ªÉm tra t·ª´ tham s·ªë
    - Ti·ªÅn x·ª≠ l√Ω v√† t√≠nh n-gram
    - T√≠nh Cosine Similarity
    - Tr·∫£ v·ªÅ gi√° tr·ªã similarity
    """
    # ƒê·ªçc file alice.txt
    with open("data/alice.txt", "r", encoding="utf-8") as f:
        alice_text = f.read()

    # Ti·ªÅn x·ª≠ l√Ω v√† t√≠nh n-gram
    alice_tokens = stem_lema(alice_text)
    test_tokens = stem_lema(test_text)

    alice_profile = count_word(alice_tokens, n=2)
    test_profile = count_word(test_tokens, n=2)

    # T√≠nh Cosine Similarity
    similarity = cosine_similarity_sklearn(alice_profile, test_profile)

    return similarity


def run_streamlit():
    st.set_page_config(page_title="Author Profiling - Lewis Carroll", layout="centered")

    st.title("üìÑ Author Profiling - Lewis Carroll")

    st.markdown("""
    ·ª®ng d·ª•ng ki·ªÉm tra xem vƒÉn b·∫£n b·∫°n cung c·∫•p c√≥ kh·∫£ nƒÉng c√πng t√°c gi·∫£ v·ªõi **Lewis Carroll** hay kh√¥ng, 
    d·ª±a tr√™n k·ªπ thu·∫≠t ph√¢n t√≠ch vƒÉn b·∫£n v√† so s√°nh ƒë·∫∑c tr∆∞ng n-gram.
    """)

    st.header("üîç B∆∞·ªõc 1: Ch·ªçn file vƒÉn b·∫£n c·∫ßn ki·ªÉm tra")
    uploaded_file = st.file_uploader("Ch·ªçn file (.txt)", type="txt")

    if uploaded_file is not None:
        text = uploaded_file.read().decode('utf-8')
        st.text_area("üìë N·ªôi dung vƒÉn b·∫£n:", text, height=200)

        st.header("‚öôÔ∏è B∆∞·ªõc 2: K·∫øt qu·∫£ ki·ªÉm tra")

        if st.button("Ki·ªÉm tra"):
            similarity = compare_authors(text)

            st.write(f"**Cosine Similarity:** {similarity:.4f}")

            if similarity > THRESHOLD:
                st.success("‚úÖ K·∫øt lu·∫≠n: C√≥ kh·∫£ nƒÉng c√πng t√°c gi·∫£ Lewis Carroll.")
            else:
                st.warning("‚ö†Ô∏è K·∫øt lu·∫≠n: Kh√°c t√°c gi·∫£ Lewis Carroll.")


run_streamlit()